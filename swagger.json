{"definitions":{"FileInfo":{"properties":{"accesstime":{"description":"indicates the last time the siafile was accessed","example":"2019-03-09T00:53:31.122129328Z","format":"date-time","type":"string"},"available":{"description":"true if the file is available for download. Files may be available before they are completely uploaded.","example":true,"type":"boolean"},"changetime":{"description":"indicates the last time the siafile metadata was updated","example":"2019-03-09T00:53:31.122129328Z","format":"date-time","type":"string"},"ciphertype":{"description":"indicates the encryption used for the siafile","example":"threefish512","type":"string"},"createtime":{"description":"indicates when the siafile was created","example":"2019-03-08T13:18:49.47866608Z","format":"date-time","type":"string"},"expiration":{"description":"Block height at which the file ceases availability.","example":60000,"format":"int64","type":"integer"},"filesize":{"description":"Size of the file in bytes.","example":8192,"format":"int64","type":"integer"},"health":{"description":"health is an indication of the amount of redundancy missing where 0 is full redundancy and \u003e1 means the file is not available. The health of the siafile is the health of the worst unstuck chunk.","example":0.19,"type":"number"},"localpath":{"description":"Path to the local file on disk.","example":"/home/foo/bar.txt","type":"string"},"maxhealth":{"description":"the maxhealth is either the health or the stuckhealth of the siafile, whichever is worst","example":0.25,"type":"number"},"maxhealthpercent":{"description":"maxhealthpercent is the maxhealth converted to be out of 100% to be more easily understood","example":83.3334,"type":"number"},"modtime":{"description":"indicates the last time the siafile contents where modified","example":"2019-03-09T00:53:31.122129328Z","format":"date-time","type":"string"},"numstuckchunks":{"description":"indicates the number of stuck chunks in a file. A chunk is stuck if it cannot reach full redundancy","example":2,"format":"int64","type":"integer"},"ondisk":{"description":"indicates if the source file is found on disk","example":true,"type":"boolean"},"recoverable":{"description":"indicates if the siafile is recoverable","example":true,"type":"boolean"},"redundancy":{"description":"Average redundancy of the file on the network. Redundancy is calculated by dividing the amount of data uploaded in the file's open contracts by the size of the file. Redundancy does not necessarily correspond to availability. Specifically, a redundancy \u003e= 1 does not indicate the file is available as there could be a chunk of the file with 0 redundancy.","example":5,"type":"number"},"renewing":{"description":"true if the file's contracts will be automatically renewed by the renter.","example":true,"type":"boolean"},"siapath":{"description":"Path to the file in the renter on the network.","example":"foo/bar.txt","type":"string"},"stuck":{"description":"a file is stuck if there are any stuck chunks in the file, which means the file cannot reach full redundancy","example":true,"type":"boolean"},"stuckhealth":{"description":"stuckhealth is the worst health of any of the stuck chunks.","example":0.25,"type":"number"},"uploadedbytes":{"description":"Total number of bytes successfully uploaded via current file contracts. This number includes padding and rendundancy, so a file with a size of 8192 bytes might be padded to 40 MiB and, with a redundancy of 5, encoded to 200 MiB for upload.","example":209715200,"format":"int64","type":"integer"},"uploadprogress":{"description":"Percentage of the file uploaded, including redundancy. Uploading has completed when uploadprogress is 100. Files may be available for download before upload progress is 100.","example":100,"type":"number"}},"type":"object"},"Hostdb":{"properties":{"hosts":{"items":{"properties":{"acceptingcontracts":{"description":"true if the host is accepting new contracts.","example":true,"type":"boolean"},"maxdownloadbatchsize":{"description":"Maximum number of bytes that the host will allow to be requested by a single download request.","example":17825792,"format":"int64","type":"integer"},"maxduration":{"description":"Maximum duration in blocks that a host will allow for a file contract.\nThe host commits to keeping files for the full duration under the\nthreat of facing a large penalty for losing or dropping data before\nthe duration is complete. The storage proof window of an incoming file\ncontract must end before the current height + maxduration.\nThere is a block approximately every 10 minutes.\ne.g. 1 day = 144 blocks\n","example":25920,"format":"int64","type":"integer"},"maxrevisebatchsize":{"description":"Maximum size in bytes of a single batch of file contract\nrevisions. Larger batch sizes allow for higher throughput as there is\nsignificant communication overhead associated with performing a batch\nupload.\n","example":17825792,"type":"integer"},"netaddress":{"description":"Remote address of the host. It can be an IPv4, IPv6, or hostname, along with the port. IPv6 addresses are enclosed in square brackets.","example":"123.456.789.0:9982","type":"string"},"publickey":{"description":"Public key used to identify and verify hosts.","properties":{"algorithm":{"description":"Algorithm used for signing and verification. Typically \"ed25519\".","example":"ed25519","type":"string"},"key":{"description":"Key used to verify signed host messages.","example":"RW50cm9weSBpc24ndCB3aGF0IGl0IHVzZWQgdG8gYmU=","type":"string"}},"type":"object"},"remainingstorage":{"description":"Unused storage capacity the host claims it has, in bytes.","example":35000000000,"format":"int64","type":"integer"},"sectorsize":{"description":"Smallest amount of data in bytes that can be uploaded or downloaded to or from the host.","example":4194304,"format":"int64","type":"integer"},"totalstorage":{"description":"Total amount of storage capacity the host claims it has, in bytes.","example":35000000000,"format":"int64","type":"integer"},"unlockhash":{"description":"Address at which the host can be paid when forming file contracts.","example":"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","type":"string"},"windowsize":{"description":"A storage proof window is the number of blocks that the host has to\nget a storage proof onto the blockchain. The window size is the\nminimum size of window that the host will accept in a file contract.\n","example":144,"type":"integer"}},"type":"object"},"type":"array"}}},"StandardError":{"properties":{"message":{"type":"string"}}},"Transaction":{"properties":{"confirmationheight":{"description":"Block height at which the transaction was confirmed. If the transaction is unconfirmed the height will be the max value of an unsigned 64-bit integer.","example":50000,"format":"int64","type":"integer"},"confirmationtimestamp":{"description":"Time, in unix time, at which a transaction was confirmed. If the transaction is unconfirmed the timestamp will be the max value of an unsigned 64-bit integer.","example":1257894000,"format":"int64","type":"integer"},"inputs":{"description":"Array of processed inputs detailing the inputs to the transaction.","items":{"properties":{"fundtype":{"description":"Type of fund represented by the input. Possible values are 'siacoin input' and 'siafund input'.","example":"siacoin input","type":"string"},"parentid":{"description":"The id of the output being spent.","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","type":"string"},"relatedaddress":{"description":"Address that is affected. For inputs (outgoing money), the related address is usually not important because the wallet arbitrarily selects which addresses will fund a transaction.","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","type":"string"},"value":{"description":"Amount of funds that have been moved in the input.","example":"1234","type":"string"},"walletaddress":{"description":"true if the address is owned by the wallet.","example":false,"type":"boolean"}},"type":"object"},"type":"array"},"outputs":{"description":"Array of processed outputs detailing the outputs of the transaction. Outputs related to file contracts are excluded.","items":{"properties":{"fundtype":{"description":"Type of fund is represented by the output. Possible values are 'siacoin output', 'siafund output', 'claim output', and 'miner payout'. Siacoin outputs and claim outputs both relate to siacoins. Siafund outputs relate to siafunds. Miner payouts point to siacoins that have been spent on a miner payout. Because the destination of the miner payout is determined by the block and not the transaction, the data 'maturityheight', 'walletaddress', and 'relatedaddress' are left blank.","example":"siacoin output","type":"string"},"id":{"description":"The id of the output that was created.","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","type":"string"},"maturityheight":{"description":"Block height the output becomes available to be spent. Siacoin outputs and siafund outputs mature immediately - their maturity height will always be the confirmation height of the transaction. Claim outputs cannot be spent until they have had 144 confirmations, thus the maturity height of a claim output will always be 144 larger than the confirmation height of the transaction.","example":50000,"format":"int64","type":"integer"},"relatedaddress":{"description":"Address that is affected. For outputs (incoming money), the related address field can be used to determine who has sent money to the wallet.","example":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","type":"string"},"value":{"description":"Amount of funds that have been moved in the output.","example":"1234","type":"string"},"walletaddress":{"description":"true if the address is owned by the wallet.","example":false,"type":"boolean"}},"type":"object"},"type":"array"},"transaction":{"description":"Raw transaction. The rest of the fields in the resposne are determined from this raw transaction. It is left undocumented here as the processed transaction (the rest of the fields in this object) are usually what is desired.","type":"object"},"transactionid":{"description":"ID of the transaction from which the wallet transaction was derived.","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","type":"string"}}},"TransactionSet":{"items":{"type":"string"},"type":"array"}},"host":"localhost:9980","info":{"title":"Sia","version":"1.4.0"},"paths":{"/consensus":{"get":{"description":"returns information about the consensus set, such as the current block height.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"currentblock":{"type":"string"},"height":{"description":"Number of blocks preceding the current block.","example":62248,"type":"integer"},"synced":{"description":"True if the consensus set is synced with the network, i.e. it has downloaded the entire blockchain.","type":"boolean"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Consensus"]}},"/consensus/validate/transactionset":{"post":{"description":"validates a set of transactions using the current utxo set.","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/TransactionSet"}}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Consensus"]}},"/daemon/constants":{"get":{"description":"Returns the set of constants in use.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"blockfrequency":{"description":"Target for how frequently new blocks should be mined.","example":600,"type":"integer"},"blocksizelimit":{"description":"Maximum size, in bytes, of a block. Blocks larger than this will be\nrejected by peers.\n","example":2000000,"type":"integer"},"extremefuturethreshold":{"description":"Farthest a block's timestamp can be in the future before the block is\nrejected outright.\n","example":10800,"type":"integer"},"futurethreshold":{"description":"How far in the future a block can be without being rejected. A block\nfurther into the future will not be accepted immediately, but the daemon\nwill attempt to accept the block as soon as it is valid.\n","example":10800,"type":"integer"},"genesistimestamp":{"description":"Timestamp of the genesis block.","example":1433600000,"type":"integer"},"initialcoinbase":{"description":"Number of coins given to the miner of the first block. Note that elsewhere\nin the API currency is typically returned in hastings and as a bignum.\nThis is not the case here.\n","example":300000,"type":"integer"},"maturitydelay":{"description":"Number of children a block must have before it is considered \"mature.\"\n","example":144,"type":"integer"},"maxadjustmentdown":{"description":"Smallest allowed ratio between the old difficulty and the new difficulty.","example":"2/5","type":"string"},"maxadjustmentup":{"description":"Largest allowed ratio between the old difficulty and the new difficulty.","example":"5/2","type":"string"},"mediantimestampwindow":{"description":"Duration of the window used to adjust the difficulty.","example":11,"type":"integer"},"minimumcoinbase":{"description":"Minimum number of coins paid out to the miner of a block (the coinbase\ndecreases with each block). Note that elsewhere in the API currency is\ntypically returned in hastings and as a bignum. This is not the case\nhere.\n","example":30000,"type":"integer"},"rootdepth":{"description":"Initial depth","items":{"type":"integer"},"type":"array"},"roottarget":{"description":"Initial target","items":{"type":"integer"},"type":"array"},"siacoinprecision":{"description":"Number of Hastings in one siacoin.","example":"1e+24","type":"string"},"siafundcount":{"description":"Total number of siafunds.","example":10000,"type":"integer"},"siafundportion":{"description":"Fraction of each file contract payout given to siafund holders.","example":"39/1000","type":"string"},"targetwindow":{"description":"Height of the window used to adjust the difficulty.","example":1000,"type":"integer"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Daemon"]}},"/daemon/stop":{"get":{"description":"cleanly shuts down the daemon. May take a few seconds.","responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Daemon"]}},"/daemon/update":{"get":{"description":"returns the the status of any updates available for the daemon","responses":{"200":{"description":"Successful Response","schema":{"properties":{"available":{"description":"Available indicates whether or not there is an update available for the daemon.","example":false,"type":"boolean"},"version":{"description":"Version is the version of the latest release.","example":"1.4.0","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Daemon"]},"post":{"description":"updates the daemon to the latest available version release.","responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Daemon"]}},"/daemon/version":{"get":{"description":"returns the version of the Sia daemon currently running.","responses":{"200":{"description":"returns the version of the Sia daemon currently running.","schema":{"properties":{"version":{"description":"Version number of the running Sia Daemon. This number is visible to its\npeers on the network.\n","example":"1.0.0","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Daemon"]}},"/gateway":{"get":{"description":"returns information about the gateway, including the list of connected peers.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"netaddress":{"description":"netaddress is the network address of the gateway as seen by the rest of\nthe network. The address consists of the external IP address and the\nport Sia is listening on. It represents a `modules.NetAddress`.\n","type":"string"},"peers":{"description":"peers is an array of peers the gateway is connected to. It represents an array of `modules.Peer`s.","items":{"properties":{"inbound":{"description":"inbound is true when the peer initiated the connection. This field\nis exposed as outbound peers are generally trusted more than inbound\npeers, as inbound peers are easily manipulated by an adversary.\n","type":"boolean"},"netaddress":{"description":"netaddress is the address of the peer. It represents a `modules.NetAddress`.","type":"string"},"version":{"description":"version is the version number of the peer.","type":"string"}},"type":"object"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Gateway"]}},"/gateway/connect/{netaddress}":{"post":{"description":"connects the gateway to a peer. The peer is added to the node list if it is not already present. The node list is the list of all nodes the gateway knows about, but is not necessarily connected to.","parameters":[{"description":"address of the peer to connect to. It should be a\nreachable ip address and port number, of the form IP:port. IPV6 addresses\nmust be enclosed in square brackets.\n","in":"path","name":"netaddress","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Gateway"]}},"/gateway/disconnect/{netaddress}":{"post":{"description":"disconnects the gateway from a peer. The peer remains in the node list. Disconnecting from a peer does not prevent the gateway from automatically connecting to the peer in the future.","parameters":[{"description":"address of the peer to connect to. It should be a reachable ip address and port number, of the form IP:port. IPV6 addresses must be enclosed in square brackets.\n","in":"path","name":"netaddress","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Gateway"]}},"/host":{"get":{"description":"fetches status information about the host","responses":{"200":{"description":"Successful Response","schema":{"properties":{"connectabilitystatus":{"description":"connectabilitystatus is one of \"checking\", \"connectable\",\nor \"not connectable\", and indicates if the host can connect to\nitself on its configured NetAddress.\n","example":"checking","type":"string"},"externalsettings":{"properties":{"acceptingcontracts":{"description":"Whether or not the host is accepting new contracts.","type":"boolean"},"collateral":{"description":"The maximum amount of money that the host will put up as collateral for storage that is contracted by the renter.","example":57870370370,"type":"string"},"contractprice":{"description":"The price that a renter has to pay to create a contract with the\nhost. The payment is intended to cover transaction fees\nfor the file contract revision and the storage proof that the host\nwill be submitting to the blockchain.\n","example":"3e+25","type":"string"},"downloadbandwidthprice":{"description":"The price that a renter has to pay when downloading data from the host.","example":250000000000000,"type":"string"},"maxcollateral":{"description":"The maximum amount of collateral that the host will put into a single file contract.","example":"1e+29","type":"string"},"maxdownloadbatchsize":{"description":"The maximum size of a single download request from a renter. Each\ndownload request has multiple round trips of communication that\nexchange money. Larger batch sizes mean fewer round trips, but more\nfinancial risk for the host - the renter can get a free batch when\ndownloading by refusing to provide a signature.\n","example":17825792,"type":"integer"},"maxduration":{"description":"The maximum duration that a host will allow for a file contract. The\nhost commits to keeping files for the full duration under the threat\nof facing a large penalty for losing or dropping data before the\nduration is complete. The storage proof window of an incoming file\ncontract must end before the current height + maxduration.\n","example":25920,"type":"integer"},"maxrevisebatchsize":{"description":"The maximum size of a single batch of file contract revisions. The\nrenter can perform DoS attacks on the host by uploading a batch of\ndata then refusing to provide a signature to pay for the data. The\nhost can reduce this exposure by limiting the batch size. Larger\nbatch sizes allow for higher throughput as there is significant\ncommunication overhead associated with performing a batch upload.\n","example":17825792,"type":"integer"},"netaddress":{"description":"The IP address or hostname (including port) that the host should be contacted at.","example":"123.456.789.0:9982","type":"string"},"remainingstorage":{"description":"The amount of unused storage capacity on the host in bytes. It should be noted that the host can lie.","example":35000000000,"type":"integer"},"revisionnumber":{"description":"The revision number indicates to the renter what iteration of\nsettings the host is currently at. Settings are generally signed.\nIf the renter has multiple conflicting copies of settings from the\nhost, the renter can expect the one with the higher revision number\nto be more recent.\n","example":0,"type":"integer"},"storageprice":{"description":"The price that a renter has to pay to store files with the host.","example":231481481481,"type":"string"},"totalstorage":{"description":"The total amount of storage capacity on the host. It should be noted that the host can lie.","example":35000000000,"type":"integer"},"unlockhash":{"description":"The unlock hash is the address at which the host can be paid when forming file contracts.","example":"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","type":"string"},"uploadbandwidthprice":{"description":"The price that a renter has to pay when uploading data to the host.","example":100000000000000,"type":"string"},"version":{"description":"The version of external settings being used. This field helps coordinate updates while preserving compatibility with older nodes.","example":"1.0.0","type":"string"},"windowsize":{"description":"The storage proof window is the number of blocks that the host has\nto get a storage proof onto the blockchain. The window size is the\nminimum size of window that the host will accept in a file contract.\n","example":144,"type":"integer"}},"type":"object"},"financialmetrics":{"description":"The financial status of the host.","properties":{"contractcompensation":{"description":"The amount of money that renters have given to the host to pay for\nfile contracts. The host is required to submit a file contract\nrevision and a storage proof for every file contract that gets created,\nand the renter pays for the miner fees on these objects.\n","example":123,"type":"string"},"contractcount":{"description":"Number of open file contracts.","example":2,"type":"integer"},"downloadbandwidthrevenue":{"description":"The amount of money that the host has made from renters downloading\ntheir files. This money has been locked in by successsful storage\nproofs.\n","example":123,"type":"string"},"lockedstoragecollateral":{"description":"The amount of storage collateral which the host has tied up in file\ncontracts. The host has to commit collateral to a file contract even\nif there is no storage, but the locked collateral will be returned\neven if the host does not submit a storage proof - the collateral is\nnot at risk, it is merely set aside so that it can be put at risk\nlater.\n","example":123,"type":"string"},"lostrevenue":{"description":"The amount of revenue, including storage revenue and bandwidth\nrevenue, that has been lost due to failed file contracts and\nfailed storage proofs.\n","example":123,"type":"string"},"loststoragecollateral":{"description":"The amount of collateral that was put up to protect data which has been lost due to failed file contracts and missed storage proofs.","example":123,"type":"string"},"potentialcontractcompensation":{"description":"The amount of money that renters have given to the host to pay for\nfile contracts which have not been confirmed yet. The potential\ncompensation becomes compensation after the storage proof is\nsubmitted.\n","example":123,"type":"string"},"potentialdownloadbandwidthrevenue":{"description":"The amount of money that the host stands to make from renters that\ndownloaded their files. The host will only realize this revenue if\nthe host successfully submits storage proofs for the related file\ncontracts.\n","example":123,"type":"string"},"potentialstoragerevenue":{"description":"The amount of revenue that the host stands to earn if all storage proofs are submitted corectly and in time.","example":123,"type":"string"},"potentialuploadbandwidthrevenue":{"description":"The amount of money that the host stands to make from renters that\nuploaded files. The host will only realize this revenue if the host\nsuccessfully submits storage proofs for the related file contracts.\n","example":123,"type":"string"},"riskedstoragecollateral":{"description":"The amount of money that the host has risked on file contracts. If\nthe host starts missing storage proofs, the host can forfeit up to\nthis many coins. In the event of a missed storage proof, locked\nstorage collateral gets returned, but risked storage collateral\ndoes not get returned.\n","example":123,"type":"string"},"storagerevenue":{"description":"The amount of money that the host has earned from storing data. This money has been locked down by successful storage proofs.","example":123,"type":"string"},"transactionfeeexpenses":{"description":"The amount of money that the host has spent on transaction fees when\nsubmitting host announcements, file contract revisions, and storage\nproofs.\n","example":123,"type":"string"},"uploadbandwidthrevenue":{"description":"The amount of money that the host has made from renters uploading\ntheir files. This money has been locked in by successful storage\nproofs.\n","example":123,"type":"string"}},"type":"object"},"internalsettings":{"description":"The settings of the host. Most interactions between the user and the host occur by changing the internal settings.","properties":{"acceptingcontracts":{"description":"When set to true, the host will accept new file contracts if the\nterms are reasonable. When set to false, the host will not accept new\nfile contracts at all.\n","example":true,"type":"boolean"},"collateral":{"description":"The maximum amount of money that the host will put up as collateral per byte per block of storage that is contracted by the renter.","example":57870370370,"type":"string"},"collateralbudget":{"description":"The total amount of money that the host will allocate to collateral across all file contracts.","example":"2000000000000000000000000000000","type":"string"},"maxcollateral":{"description":"The maximum amount of collateral that the host will put into a single file contract.","example":"100000000000000000000000000000","type":"string"},"maxdownloadbatchsize":{"description":"The maximum size of a single download request from a renter. Each\ndownload request has multiple round trips of communication that\nexchange money. Larger batch sizes mean fewer round trips, but more\nfinancial risk for the host - the renter can get a free batch when\ndownloading by refusing to provide a signature.\n","example":17825792,"type":"integer"},"maxduration":{"description":"The maximum duration of a file contract that the host will accept.\nThe storage proof window must end before the current height +\nmaxduration.\n","example":25920,"type":"integer"},"maxrevisebatchsize":{"description":"The maximum size of a single batch of file contract revisions. The\nrenter can perform DoS attacks on the host by uploading a batch of\ndata then refusing to provide a signature to pay for the data. The\nhost can reduce this exposure by limiting the batch size. Larger\nbatch sizes allow for higher throughput as there is significant\ncommunication overhead associated with performing a batch upload.\n","example":17825792,"type":"integer"},"mincontractprice":{"description":"The minimum price that the host will demand from a renter when\nforming a contract. Typically this price is to cover transaction\nfees on the file contract revision and storage proof, but can also\nbe used if the host has a low amount of collateral. The price is a\nminimum because the host may automatically adjust the price upwards\nin times of high demand.\n","example":"30000000000000000000000000","type":"string"},"mindownloadbandwidthprice":{"description":"The minimum price that the host will demand from a renter when the\nrenter is downloading data. If the host is saturated, the host may\nincrease the price from the minimum.\n","example":"250000000000000","type":"string"},"minstorageprice":{"description":"The minimum price that the host will demand when storing data for\nextended periods of time. If the host is low on space, the price of\nstorage may be set higher than the minimum.\n","example":"231481481481","type":"string"},"minuploadbandwidthprice":{"description":"The minimum price that the host will demand from a renter when the\nrenter is uploading data. If the host is saturated, the host may\nincrease the price from the minimum.\n","example":"100000000000000","type":"string"},"netaddress":{"description":"The IP address or hostname (including port) that the host should be\ncontacted at. If left blank, the host will automatically figure out\nits ip address and use that. If given, the host will use the address\ngiven.\n","example":"123.456.789.0:9982","type":"string"},"windowsize":{"description":"The storage proof window is the number of blocks that the host has\nto get a storage proof onto the blockchain. The window size is the\nminimum size of window that the host will accept in a file contract.\n","example":144,"type":"integer"}},"type":"object"},"networkmetrics":{"description":"Information about the network, specifically various ways in which renters have contacted the host.","properties":{"downloadcalls":{"description":"The number of times that a renter has attempted to download something from the host.","example":0,"type":"integer"},"errorcalls":{"description":"The number of calls that have resulted in errors. A small number of\nerrors are expected, but a large number of errors indicate either\nbuggy software or malicious network activity. Usually buggy\nsoftware.\n","example":1,"type":"integer"},"formcontractcalls":{"description":"The number of times that a renter has tried to form a contract with the host.","example":2,"type":"integer"},"renewcalls":{"description":"The number of times that a renter has tried to renew a contract with the host.","example":3,"type":"integer"},"revisecalls":{"description":"The number of times that the renter has tried to revise a contract with the host.","example":4,"type":"integer"},"settingscalls":{"description":"The number of times that a renter has queried the host for the\nhosts settings. The settings include the price of bandwidth, which\nis a price that can adjust every few minutes. This value is usually\nvery high compared to the others.\n","example":5,"type":"integer"},"unrecognizedcalls":{"description":"The number of times that a renter has attempted to use an unrecognized call. Larger numbers typically indicate buggy software.","example":6,"type":"integer"}},"type":"object"},"workingstatus":{"description":"workingstatus is one of \"checking\", \"working\", or \"not working\"\nand indicates if the host is being actively used by renters.\n","example":"checking","type":"string"}}}}},"tags":["Host"]},"post":{"description":"configures hosting parameters. All parameters are optional; unspecified parameters will be left unchanged.","parameters":[{"description":"When set to true, the host will accept new file contracts if the\nterms are reasonable. When set to false, the host will not accept new\nfile contracts at all.\n","in":"query","name":"acceptingcontracts","required":false,"type":"boolean"},{"description":"The maximum size of a single download request from a renter. Each\ndownload request has multiple round trips of communication that\nexchange money. Larger batch sizes mean fewer round trips, but more\nfinancial risk for the host - the renter can get a free batch when\ndownloading by refusing to provide a signature.\n","in":"query","name":"maxdownloadbatchsize","required":false,"type":"string"},{"description":"The maximum duration of a file contract that the host will accept.\nThe storage proof window must end before the current height +\nmaxduration.\n","in":"query","name":"maxduration","required":false,"type":"string"},{"description":"The maximum size of a single batch of file contract revisions. The\nrenter can perform DoS attacks on the host by uploading a batch of\ndata then refusing to provide a signature to pay for the data. The\nhost can reduce this exposure by limiting the batch size. Larger\nbatch sizes allow for higher throughput as there is significant\ncommunication overhead associated with performing a batch upload.\n","in":"query","name":"maxrevisebatchsize","required":false,"type":"string"},{"description":"The IP address or hostname (including port) that the host should be\ncontacted at. If left blank, the host will automatically figure out\nits ip address and use that. If given, the host will use the address\ngiven.\n","in":"query","name":"netaddress","required":false,"type":"string"},{"description":"The storage proof window is the number of blocks that the host has\nto get a storage proof onto the blockchain. The window size is the\nminimum size of window that the host will accept in a file contract.\n","in":"query","name":"windowsize","required":false,"type":"string"},{"description":"The maximum amount of money that the host will put up as collateral per byte per block of storage that is contracted by the renter.","in":"query","name":"collateral","required":false,"type":"string"},{"description":"The total amount of money that the host will allocate to collateral across all file contracts.","in":"query","name":"collateralbudget","required":false,"type":"string"},{"description":"The maximum amount of collateral that the host will put into a single file contract.","in":"query","name":"maxcollateral","required":false,"type":"string"},{"description":"The minimum price that the host will demand from a renter when\nforming a contract. Typically this price is to cover transaction\nfees on the file contract revision and storage proof, but can also\nbe used if the host has a low amount of collateral. The price is a\nminimum because the host may automatically adjust the price upwards\nin times of high demand.\n","in":"query","name":"mincontractprice","required":false,"type":"string"},{"description":"The minimum price that the host will demand from a renter when the\nrenter is downloading data. If the host is saturated, the host may\nincrease the price from the minimum.\n","in":"query","name":"mindownloadbandwidthprice","required":false,"type":"string"},{"description":"The minimum price that the host will demand when storing data for\nextended periods of time. If the host is low on space, the price of\nstorage may be set higher than the minimum.\n","in":"query","name":"minstorageprice","required":false,"type":"string"},{"description":"The minimum price that the host will demand from a renter when the\nrenter is uploading data. If the host is saturated, the host may\nincrease the price from the minimum.\n","in":"query","name":"minuploadbandwidthprice","required":false,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/announce":{"post":{"description":"Announce the host to the network as a source of storage. Generally only needs to be called once.","parameters":[{"description":"The address to be announced. If no address is provided, the automatically discovered address will be used instead.","in":"query","name":"netaddress","required":false,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/storage":{"get":{"description":"gets a list of folders tracked by the host's storage manager.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"folders":{"items":{"properties":{"capacity":{"description":"Maximum capacity of the storage folder. The host will not store more\nthan this many bytes in the folder. This capacity is not checked\nagainst the drive's remaining capacity. Therefore, you must manually\nensure the disk has sufficient capacity for the folder at all times.\nOtherwise you risk losing renter's data and failing storage proofs.\n","example":50000000000,"type":"integer"},"capacityremaining":{"description":"Unused capacity of the storage folder.","example":100000,"type":"integer"},"failedreads":{"description":"Number of failed disk read \u0026 write operations. A large number of\nfailed reads or writes indicates a problem with the filesystem or\ndrive's hardware.\n","example":1,"type":"integer"},"failedwrites":{"example":0,"type":"integer"},"path":{"description":"Absolute path to the storage folder on the local filesystem.","example":"/home/foo/bar","type":"string"},"successfulreads":{"description":"Number of successful read \u0026 write operations.","example":2,"type":"integer"},"successfulwrites":{"example":3,"type":"integer"}},"type":"object"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/storage/folders/add":{"post":{"description":"adds a storage folder to the manager. The manager may not check that there is enough space available on-disk to support as much storage as requested","parameters":[{"description":"Local path on disk to the storage folder to add.","in":"query","name":"path","required":true,"type":"string"},{"description":"Initial capacity of the storage folder. This value isn't validated so it is possible to set the capacity of the storage folder greater than the capacity of the disk. Do not do this. in: query\n","in":"query","name":"size","required":true,"type":"integer"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/storage/folders/remove":{"post":{"description":"Remove a storage folder from the manager. All storage on the folder will be moved to other storage folders, meaning that no data will be lost. If the manager is unable to save data, an error will be returned and the operation will be stopped.\n","parameters":[{"description":"Local path on disk to the storage folder to remove.","in":"query","name":"path","required":true,"type":"string"},{"description":"If `force` is true, the storage folder will be removed even if the data in\nthe storage folder cannot be moved to other storage folders, typically\nbecause they don't have sufficient capacity. If `force` is true and the data\ncannot be moved, data will be lost.\n","in":"query","name":"force","required":false,"type":"boolean"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/storage/folders/resize":{"post":{"description":"grows or shrink a storage folder in the manager. The manager may not check that there is enough space on-disk to support growing the storage folder, but should gracefully handle running out of space unexpectedly. When shrinking a storage folder, any data in the folder that needs to be moved will be placed into other storage folders, meaning that no data will be lost. If the manager is unable to migrate the data, an error will be returned and the operation will be stopped.\n","parameters":[{"description":"Local path on disk to the storage folder to resize.","in":"query","name":"path","required":true,"type":"string"},{"description":"Desired new size of the storage folder. This will be the new capacity of the storage folder.","in":"query","name":"newsize","required":true,"type":"integer"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/host/storage/sectors/delete/{merkleroot}":{"post":{"description":"deletes a sector, meaning that the manager will be unable to upload that sector and be unable to provide a storage proof on that sector.\nThis endpoint is for removing the data entirely, and will remove instances of the sector appearing at all heights.\nThe primary purpose is to comply with legal requests to remove data.\n","parameters":[{"description":"Merkleroot of the sector to delete.","in":"path","name":"merkleroot","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Host"]}},"/hostdb/active":{"get":{"description":"lists all of the active hosts known to the renter, sorted by preference.\n","parameters":[{"description":"Number of hosts to return. The actual number of hosts returned may be less if there are insufficient active hosts. Optional, the default is all active hosts.","in":"query","name":"numhosts","required":false,"type":"integer"}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Hostdb"}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["HostDB"]}},"/hostdb/all":{"get":{"description":"lists all of the hosts known to the renter. Hosts are not guaranteed to be in any particular order, and the order may change in subsequent calls.\n","responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Hostdb"}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["HostDB"]}},"/hostdb/hosts/{pubkey}":{"get":{"description":"fetches detailed information about a particular host, including metrics regarding the score of the host within the database. It should be noted that each renter uses different metrics for selecting hosts, and that a good score on in one hostdb does not mean that the host will be successful on the network overall.\n","parameters":[{"description":"The public key of the host. Each public key identifies a single host.","in":"path","name":"pubkey","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"entry":{"properties":{"acceptingcontracts":{"description":"true if the host is accepting new contracts.","example":true,"type":"boolean"},"maxdownloadbatchsize":{"description":"Maximum number of bytes that the host will allow to be requested by a single download request.","example":17825792,"type":"integer"},"maxduration":{"description":"Maximum duration in blocks that a host will allow for a file contract.\nThe host commits to keeping files for the full duration under the\nthreat of facing a large penalty for losing or dropping data before\nthe duration is complete. The storage proof window of an incoming file\ncontract must end before the current height + maxduration.\nThere is a block approximately every 10 minutes.\ne.g. 1 day = 144 blocks\n","example":25920,"type":"integer"},"maxrevisebatchsize":{"description":"Maximum size in bytes of a single batch of file contract\nrevisions. Larger batch sizes allow for higher throughput as there is\nsignificant communication overhead associated with performing a batch\nupload.\n","example":17825792,"type":"integer"},"netaddress":{"description":"Remote address of the host. It can be an IPv4, IPv6, or hostname, along with the port. IPv6 addresses are enclosed in square brackets.","example":"123.456.789.0:9982","type":"string"},"publickey":{"description":"Public key used to identify and verify hosts.","properties":{"algorithm":{"description":"Algorithm used for signing and verification. Typically \"ed25519\".","example":"ed25519","type":"string"},"key":{"description":"Key used to verify signed host messages.","example":"RW50cm9weSBpc24ndCB3aGF0IGl0IHVzZWQgdG8gYmU=","type":"string"}},"type":"object"},"publickeystring":{"description":"The string representation of the full public key, used when calling /hostdb/hosts.","example":"ed25519:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef","type":"string"},"remainingstorage":{"description":"Unused storage capacity the host claims it has, in bytes.","example":35000000000,"type":"integer"},"scorebreakdown":{"description":"A set of scores as determined by the renter. Generally, the host's final\nfinal score is all of the values multiplied together. Modified renters may\nhave additional criteria that they use to judge a host, or may ignore\ncertin criteia. In general, these fields should only be used as a loose\nguide for the score of a host, as every renter sees the world differently\nand uses different metrics to evaluate hosts.\n","properties":{"ageadjustment":{"description":"The multiplier that gets applied to the host based on how long it has been a host. Older hosts typically have a lower penalty.","example":0.1234,"type":"integer"},"burnadjustment":{"description":"The multiplier that gets applied to the host based on how much proof-of-burn the host has performed. More burn causes a linear increase in score.","example":23.456,"type":"integer"},"collateraladjustment":{"description":"The multiplier that gets applied to a host based on how much collateral the host is offering. More collateral is typically better, though above a point it can be detrimental.","example":23.456,"type":"integer"},"priceadjustment":{"description":"The multiplier that gets applied to a host based on the host's price. Lower prices are almost always better. Below a certain, very low price, there is no advantage.","example":0.1234,"type":"integer"},"score":{"description":"The overall score for the host. Scores are entriely relative, and are\nconsistent only within the current hostdb. Between different machines,\ndifferent configurations, and different versions the absolute scores for\na given host can be off by many orders of magnitude. When displaying to a\nhuman, some form of normalization with respect to the other hosts (for\nexample, divide all scores by the median score of the hosts) is\nrecommended.\n","example":123456,"type":"integer"},"storageremainingadjustment":{"description":"The multiplier that gets applied to a host based on how much storage is remaining for the host. More storage remaining is better, to a point.","example":0.1234,"type":"integer"},"uptimeadjustment":{"description":"The multiplier that gets applied to a host based on the uptime percentage of the host. The penalty increases extremely quickly as uptime drops below 90%.","example":0.1234,"type":"integer"},"versionadjustment":{"description":"The multiplier that gets applied to a host based on the version of Sia\nthat they are running. Versions get penalties if there are known bugs,\nscaling limitations, performance limitations, etc. Generally, the most\nrecent version is always the one with the highest score.\n","example":0.1234,"type":"integer"}},"type":"object"},"sectorsize":{"description":"Smallest amount of data in bytes that can be uploaded or downloaded to or from the host.","example":4194304,"type":"integer"},"totalstorage":{"description":"Total amount of storage capacity the host claims it has, in bytes.","example":35000000000,"type":"integer"},"unlockhash":{"description":"Address at which the host can be paid when forming file contracts.","example":"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","type":"string"},"windowsize":{"description":"A storage proof window is the number of blocks that the host has to\nget a storage proof onto the blockchain. The window size is the\nminimum size of window that the host will accept in a file contract.\n","example":144,"type":"integer"}},"type":"object"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["HostDB"]}},"/miner":{"get":{"description":"returns the status of the miner.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"blocksmined":{"description":"Number of mined blocks. This value is remembered after restarting.","example":9001,"type":"integer"},"cpuhashrate":{"description":"How fast the cpu is hashing, in hashes per second.","example":1337,"type":"integer"},"cpumining":{"description":"true if the cpu miner is active.","example":false,"type":"boolean"},"staleblocksmined":{"description":"Number of mined blocks that are stale, indicating that they are not\nincluded in the current longest chain, likely because some other block at\nthe same height had its chain extended first.\n","example":0,"type":"integer"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Miner"]}},"/miner/header":{"get":{"description":"provides a block header that is ready to be grinded on for work.","produces":["application/octet-stream"],"responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Miner"]},"post":{"consumes":["application/octet-stream"],"description":"submits a header that has passed the POW.","responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Miner"]}},"/miner/start":{"get":{"description":"starts a single threaded cpu miner. Does nothing if the cpu miner is already running.","responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Miner"]}},"/miner/stop":{"get":{"description":"stops the cpu miner. Does nothing if the cpu miner is not running.","responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Miner"]}},"/renter":{"get":{"description":"returns the current settings along with metrics on the renter's spending.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"currentperiod":{"description":"Height at which the current allowance period began.","example":200,"format":"int64","type":"integer"},"financialmetrics":{"description":"Metrics about how much the Renter has spent on storage, uploads, and downloads.","properties":{"contractfees":{"description":"Amount of money spent on contract fees, transaction fees and siafund fees. In hastings.","example":"1234","type":"string"},"contractspending":{"description":"How much money, in hastings, the Renter has spent on file contracts, including fees. (deprecated, now totalallocated)","example":"1234","type":"string"},"downloadspending":{"description":"Amount of money spent on downloads.","example":"5678","type":"string"},"storagespending":{"description":"Amount of money spend on storage.","example":"1234","type":"string"},"totalallocated":{"description":"Total amount of money that the renter has put into contracts. Includes spent money and also money that will be returned to the renter. In hastings.","example":"1234","type":"string"},"unspent":{"description":"Amount of money in the allowance that has not been spent.","example":"1234","type":"string"},"uploadspending":{"description":"Amount of money spent on uploads.","example":"5678","type":"string"}},"type":"object"},"settings":{"description":"Settings that control the behavior of the renter.","properties":{"allowance":{"description":"Allowance dictates how much the renter is allowed to spend in a given period. Note that funds are spent on both storage and bandwidth.","properties":{"funds":{"description":"Amount of money allocated for contracts. Funds are spent on both storage and bandwidth.","example":"1234","type":"string"},"hosts":{"description":"Number of hosts that contracts will be formed with.","example":24,"format":"int64","type":"integer"},"period":{"description":"Duration of contracts formed, in number of blocks.","example":6048,"format":"int64","type":"integer"},"renewwindow":{"description":"If the current blockheight + the renew window \u003e= the height the contract is scheduled to end, the contract is renewed automatically. Is always nonzero.","example":3024,"format":"int64","type":"integer"}},"type":"object"},"maxdownloadspeed":{"description":"bytes per second. MaxDownloadSpeed by defaul is unlimited but can be set by the user to manage bandwidth","example":1234,"format":"int64","type":"integer"},"maxuploadspeed":{"description":"bytes per second. MaxUploadSpeed by defaul is unlimited but can be set by the user to manage bandwidth","example":1234,"format":"int64","type":"integer"},"streamcachesize":{"description":"The StreamCacheSize is the number of data chunks that will be cached during streaming","example":4,"format":"int64","type":"integer"}},"type":"object"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]},"post":{"description":"modify settings that control the renter's behavior.","parameters":[{"description":"Number of hastings allocated for file contracts in the given period.","in":"query","name":"funds","type":"string"},{"description":"Number of hosts that contracts should be formed with. Files cannot be uploaded to more hosts than you have contracts with, and it's generally good to form a few more contracts than you need.","format":"int64","in":"query","name":"hosts","type":"integer"},{"description":"Duration of contracts formed. Must be nonzero.","in":"query","name":"period","type":"integer"},{"description":"Renew window specifies how many blocks before the expiration of the current contracts the renter will wait before renewing the contracts. A smaller renew window means that Sia must be run more frequently, but also means fewer total transaction fees. Storage spending is not affected by the renew window size.","format":"int64","in":"query","name":"renewwindow","type":"integer"},{"description":"Max download speed permitted, speed provide in bytes per second.","format":"int64","in":"query","name":"maxdownloadspeed","type":"integer"},{"description":"Max upload speed permitted, speed provide in bytes per second","format":"int64","in":"query","name":"maxuploadspeed","type":"integer"},{"description":"Stream cache size specifies how many data chunks will be cached while streaming.","format":"int64","in":"query","name":"streamcachesize","type":"integer"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/backup":{"get":{"description":"Lists backups.","parameters":[{"description":"if requested, fetch the backups stored on a specific host","in":"query","name":"host","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"backups":{"items":{"properties":{"creationdate":{"type":"integer"},"name":{"type":"string"},"size":{"format":"int64","type":"integer"},"uploadprogress":{"type":"number"}},"type":"object"},"type":"array"},"syncedhosts":{"items":{"properties":{"algorithm":{"type":"string"},"key":{"type":"string"}},"type":"object"},"type":"array"},"unsyncedhosts":{"items":{"properties":{"algorithm":{"type":"string"},"key":{"type":"string"}},"type":"object"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/backups/create":{"post":{"description":"Creates a backup of all siafiles.","parameters":[{"in":"query","name":"name","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/backups/restore":{"post":{"description":"Restores siafiles from a backup.","parameters":[{"in":"query","name":"name","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/contracts":{"get":{"description":"returns active contracts. Expired contracts are not included.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"contracts":{"items":{"properties":{"downloadspending":{"description":"Amount of contract funds that have been spent on downloads. In hastings.","example":"1234","type":"string"},"endheight":{"description":"Block height that the file contract ends on.","example":50000,"format":"int64","type":"integer"},"fees":{"description":"Fees paid in order to form the file contract.","example":"1234","type":"string"},"goodforrenew":{"description":"Signals if contract is good for a renewal","example":false,"type":"boolean"},"goodforupload":{"description":"Signals if contract is good for uploading data","example":true,"type":"boolean"},"hostpublickey":{"description":"Public key of the host the contract was formed with.","properties":{"algorithm":{"example":"ed25519","type":"string"},"key":{"example":"RW50cm9weSBpc24ndCB3aGF0IGl0IHVzZWQgdG8gYmU","type":"string"}},"type":"object"},"id":{"description":"ID of the file contract","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","type":"string"},"lasttransaction":{"description":"A signed transaction containing the most recent contract revision.","type":"object"},"netaddress":{"description":"Address of the host the file contract was formed with.","example":"12.34.56.78:9","type":"string"},"renterfunds":{"description":"Remaining funds left for the renter to spend on uploads \u0026 downloads.","example":"1234","type":"string"},"size":{"description":"Size of the file contract, which is typically equal to the number of bytes that have been uploaded to the host.","example":8192,"format":"int64","type":"integer"},"startheight":{"description":"Block height that the file contract began on.","example":50000,"format":"int64","type":"integer"},"storagespending":{"description":"Amount of contract funds that have been spent on storage.","example":"1234","type":"string"},"totalcost":{"description":"Total cost to the wallet of forming the file contract. This includes both the fees and the funds allocated in the contract.","example":"1234","type":"string"},"uploadspending":{"description":"Amount of contract funds that have been spent on uploads.","example":"1234","type":"string"}},"type":"object"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/delete/{siapath}":{"post":{"description":"deletes a renter file entry. Does not delete any downloads or original files, only the entry in the renter.","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/dir/{siapath}":{"get":{"description":"retrieves the contents of a directory on the sia network","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"directories":{"items":{"properties":{"aggregatenumfiles":{"description":"the total number of files in the sub directory tree","example":2,"format":"int64","type":"integer"},"aggregatenumsize":{"example":4096,"format":"int64","type":"integer"},"aggregatenumstuckchunks":{"description":"the total number of stuck chunks in the sub directory tree","example":4,"format":"int64","type":"integer"},"health":{"description":"This is the worst health of any of the files or subdirectories. Health is the percent of parity pieces missing. - health = 0 is full redundancy - health \u003c= 1 is recoverable - health \u003e 1 needs to be repaired from disk","example":1,"type":"number"},"lasthealthchecktime":{"description":"The oldest time that the health of the directory or any of its files or sub directories' health was checked.","example":"2018-09-23T08:00:00.000000000+04:00","format":"date-time","type":"string"},"maxhealth":{"description":"This is the worst health when comparing stuck health vs health","example":0.5,"type":"number"},"minredundancy":{"description":"the lowest redundancy of any file or directory in the sub directory tree","example":2.6,"type":"number"},"mostrecentmodtime":{"description":"the most recent mod time of any file or directory in the sub directory tree","example":"2018-09-23T08:00:00.000000000+04:00","format":"date-time","type":"string"},"numfiles":{"description":"the number of files in the directory","example":3,"format":"int64","type":"integer"},"numsubdirs":{"description":"the number of directories in the directory","example":2,"format":"int64","type":"integer"},"siapath":{"description":"The path to the directory on the sia network","example":"foo/bar","type":"string"}},"type":"object"},"type":"array"},"files":{"items":{"$ref":"#/definitions/FileInfo"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]},"post":{"description":"performs various functions on the renter's directories","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"},{"description":"Action can be either create or delete.\n - create will create an empty directory on the sia network\n - delete will remove a directory and its contents from the sia network\n - rename will rename a directory on the sia network","in":"query","name":"action","required":true,"type":"string"},{"description":"The new siapath of the renamed folder. Only required for the rename action. Location of the file in the renter on the network.","in":"query","name":"newsiapath","type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/download/{siapath}":{"get":{"description":"downloads a file to the local filesystem. The call will block until the file has been downloaded.","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"},{"description":"If async is true, the http request will be non blocking. Can't be used with","in":"query","name":"async","type":"boolean"},{"description":"Location on disk that the file will be downloaded to.","in":"query","name":"destination","required":true,"type":"string"},{"description":"If httresp is true, the data will be written to the http response.","in":"query","name":"httpresp","type":"boolean"},{"description":"Length of the requested data. Has to be \u003c= filesize-offset.","format":"int64","in":"query","name":"length","type":"integer"},{"description":"Offset relative to the file start from where the download starts.","format":"int64","in":"query","name":"offset","type":"integer"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/downloadasync/{siapath}":{"get":{"description":"downloads a file to the local filesystem. The call will return immediately.","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"},{"description":"Location on disk that the file will be downloaded to.","in":"query","name":"destination","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/downloads":{"get":{"description":"lists all files in the download queue.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"downloads":{"items":{"properties":{"completed":{"description":"Whether or not the download has completed. Will be false initially, and set to true immediately as the download has been fully written out to the file, to the http stream, or to the in-memory buffer. Completed will also be set to true if there is an error that causes the download to fail.","example":true,"type":"boolean"},"destination":{"description":"Local path that the file will be downloaded to.","example":"/home/users/alice","type":"string"},"destinationtype":{"description":"What type of destination was used. Can be \"file\", indicating a download to disk, can be \"buffer\", indicating a download to memory, and can be \"http stream\", indicating that the download was streamed through the http API.","example":"file","type":"string"},"endtime":{"description":"Time at which the download completed in RFC 3339 time. Will be zero if the download has not yet completed.","example":"2009-11-10T23:00:00Z","type":"string"},"error":{"description":"Error encountered while downloading. If there was no error (yet), it will be the empty string.","example":"","type":"string"},"length":{"description":"Length of the download. If the download was a partial download, this will indicate the length of the partial download, and not the length of the full file.","example":8192,"format":"int64","type":"integer"},"offset":{"description":"Offset within the file of the download. For full file downloads, the offset will be '0'. For partial downloads, the offset may be anywhere within the file. offset+length will never exceed the full file size.","example":0,"format":"int64","type":"integer"},"received":{"description":"Number of bytes downloaded thus far. Will only be updated as segments of the file complete fully. This typically has a resolution of tens of megabytes.","example":4096,"format":"int64","type":"integer"},"siapath":{"description":"Siapath given to the file when it was uploaded.","example":"foo/bar.txt","type":"string"},"starttime":{"description":"Time at which the download was initiated in RFC 3339.","example":"2009-11-10T23:00:00Z","type":"string"},"totaldatatransfered":{"description":"The total amount of data transfered when downloading the file. This will eventually include data transferred during contract + payment negotiation, as well as data from failed piece downloads.","example":10321,"format":"int64","type":"integer"}},"type":"object"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/downloads/clear":{"post":{"description":"Clears the download history of the renter for a range of unix time stamps. Both parameters are optional, if no parameters are provided, the entire download history will be cleared. To clear a single download, provide the timestamp for the download as both parameters. Providing only the before parameter will clear all downloads older than the timestamp. Conversely, providing only the after parameter will clear all downloads newer than the timestamp.","parameters":[{"description":"unix timestamp found in the download history","format":"int64","in":"query","name":"before","type":"integer"},{"description":"unix timestamp found in the download history","format":"int64","in":"query","name":"after","type":"integer"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/file/{siapath}":{"get":{"description":"lists the status of specified file.","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"file":{"$ref":"#/definitions/FileInfo"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/files":{"get":{"description":"lists the status of all files.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"files":{"items":{"$ref":"#/definitions/FileInfo"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/prices":{"get":{"description":"lists the estimated prices of performing various storage and data operations.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"downloadterabyte":{"description":"The estimated cost of downloading one terabyte of data from the network.","example":"1234","type":"string"},"formcontracts":{"description":"The estimated cost of forming a set of contracts on the network. This cost also applies to the estimated cost of renewing the renter's set of contracts.","example":"1234","type":"string"},"storageterabytemonth":{"description":"The estimated cost of storing one terabyte of data on the network for a month, including accounting for redundancy.","example":"1234","type":"string"},"uploadterabyte":{"description":"The estimated cost of uploading one terabyte of data to the network, including accounting for redundancy.","example":"1234","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/rename/{siapath}":{"post":{"description":"renames a file. Does not rename any downloads or source files, only renames the entry in the renter. An error is returned if siapath does not exist or newsiapath already exists.","parameters":[{"description":"Location of the file in the renter on the network.","in":"path","name":"siapath","required":true,"type":"string"},{"description":"New location of the file in the renter on the network.","in":"query","name":"newsiapath","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/stream/{siapath}":{"get":{"description":"downloads a file using http streaming. This call blocks until the data is received. The streaming endpoint also uses caching internally to prevent siad from redownloading the same chunk multiple times when only parts of a file are requested at once. This might lead to a substantial increase in ram usage and therefore it is not recommended to stream multiple files in parallel at the moment. This restriction will be removed together with the caching once partial downloads are supported in the future.","parameters":[{"in":"path","name":"siapath","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/renter/upload/{siapath}":{"post":{"description":"uploads a file to the network from the local filesystem.","parameters":[{"description":"Location where the file will reside in the renter on the network. The path must be non-empty, may not include any path traversal strings (\"./\", \"../\"), and may not begin with a forward-slash character.","in":"path","name":"siapath","required":true,"type":"string"},{"description":"The number of data pieces to use when erasure coding the file.","format":"int64","in":"query","name":"datapieces","type":"integer"},{"description":"The number of parity pieces to use when erasure coding the file. Total redundancy of the file is (datapieces+paritypieces)/datapieces.","format":"int64","in":"query","name":"paritypieces","type":"integer"},{"description":"Location on disk of the file being uploaded.","in":"query","name":"source","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Renter"]}},"/wallet":{"get":{"description":"returns basic information about the wallet,  such as whether the wallet is locked or unlocked.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"confirmedsiacoinbalance":{"description":"Number of siacoins, in hastings, available to the wallet as of the most recent block in the blockchain.","example":"123456","type":"string"},"dustthreshold":{"description":"Number of siacoins, in hastings per byte, below which a transaction output cannot be used because the wallet considers it a dust output","example":"1234","type":"string"},"encrypted":{"description":"Indicates whether the wallet has been encrypted or not. If the wallet has not been encrypted, then no data has been generated at all, and the first time the wallet is unlocked, the password given will be used as the password for encrypting all of the data. 'encrypted' will only be set to false if the wallet has never been unlocked before (the unlocked wallet is still encryped - but the encryption key is in memory).","example":true,"type":"boolean"},"rescanning":{"description":"Indicates whether the wallet is currently rescanning the blockchain. This will be true for the duration of calls to /unlock, /seeds, /init/seed, and /sweep/seed.","example":false,"type":"boolean"},"siacoinclaimbalance":{"description":"Number of siacoins, in hastings, that can be claimed from the siafunds as of the most recent block. Because the claim balance increases every time a file contract is created, it is possible that the balance will increase before any claim transaction is confirmed.","example":"9001","type":"string"},"siafundbalance":{"description":"Number of siafunds available to the wallet as of the most recent block in the blockchain.","example":"1","type":"string"},"unconfirmedincomingsiacoins":{"description":"Number of siacoins, in hastings, are entering the wallet according to the set of unconfirmed transactions. This number is often inflated by outgoing siacoins, because outputs are frequently larger than the amount being sent. The refund will be included in the unconfirmed incoming siacoins balance.","example":"789","type":"string"},"unconfirmedoutgoingsiacoins":{"description":"Number of siacoins, in hastings, that are leaving the wallet according to the set of unconfirmed transactions. Often this number appears inflated, because outputs are frequently larger than the number of coins being sent, and there is a refund. These coins are counted as outgoing, and the refund is counted as incoming. The difference in balance can be calculated using 'unconfirmedincomingsiacoins' - 'unconfirmedoutgoingsiacoins'","example":"0","type":"string"},"unlocked":{"description":"Indicates whether the wallet is currently locked or unlocked. Some calls become unavailable when the wallet is locked.","example":true,"type":"boolean"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/033x":{"post":{"description":"loads a v0.3.3.x wallet into the current wallet, harvesting all of the secret keys. All spendable addresses in the loaded wallet will become spendable from the current wallet. An error will be returned if the given encryptionpassword is incorrect.","parameters":[{"description":"Path on disk to the v0.3.3.x wallet to be loaded.","in":"query","name":"source","type":"string"},{"description":"Encryption key of the wallet.","in":"query","name":"encryptionpassword","type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/address":{"get":{"description":"gets a new address from the wallet generated by the primary seed. An error will be returned if the wallet is locked.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"address":{"description":"Wallet address that can receive siacoins or siafunds. Addresses are 76 character long hex strings.","example":"1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/addresses":{"get":{"description":"fetches the list of addresses from the wallet.  If the wallet has not been created or unlocked, no addresses will be returned. After the wallet is unlocked, this call will continue to return its addresses even after the wallet is locked again.","responses":{"200":{"description":"Successful Response","schema":{"properties":{"addresses":{"description":"Array of wallet addresses owned by the wallet.","example":{"addresses":["1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"]},"items":{"type":"string"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/backup":{"get":{"description":"creates a backup of the wallet settings file. Though this can easily be done manually, the settings file is often in an unknown or difficult to find location. The /wallet/backup call can spare users the trouble of needing to find their wallet file. The destination file is overwritten if it already exists.","parameters":[{"description":"path to the location on disk where the backup file will be saved.","in":"query","name":"destination","type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/changepassword":{"post":{"description":"changes the wallet's encryption password.","parameters":[{"description":"encryptionpassword is the wallet's current encryption password.","in":"query","name":"encryptionpassword","required":true,"type":"string"},{"description":"newpassword is the new password for the wallet.","in":"query","name":"newpassword","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/init":{"post":{"description":"initializes the wallet. After the wallet has been initialized once, it does not need to be initialized again, and future calls to /wallet/init will return an error, unless the force flag is set. The encryption password is provided by the api call. If the password is blank, then the password will be set to the same as the seed.","parameters":[{"description":"Password that will be used to encrypt the wallet. All subsequent calls should use this password. If left blank, the seed that gets returned will also be the encryption password.","in":"query","name":"encryptionpassword","type":"string"},{"description":"Name of the dictionary that should be used when encoding the seed. 'english' is the most common choice when picking a dictionary.","in":"query","name":"dictionary","type":"string"},{"description":"boolean, when set to true /wallet/init will Reset the wallet if one exists instead of returning an error. This allows API callers to reinitialize a new wallet.","in":"query","name":"force","type":"boolean"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"primaryseed":{"description":"Wallet seed used to generate addresses that the wallet is able to spend.","example":"hello world hello world hello world hello world hello world hello world  hello world hello world hello world hello world hello world hello world  hello world hello world hello","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/init/seed":{"post":{"description":"initializes the wallet using a preexisting seed.  After the wallet has been initialized once, it does not need to be initialized again, and future calls to /wallet/init/seed will return an error unless the force flag is set. The encryption password is provided by the api call. If the password is blank, then the password will be set to the same as the seed. Note that loading a preexisting seed requires scanning the blockchain to determine how many keys have been generated from the seed. For this reason, /wallet/init/seed can only be called if the blockchain is synced.","parameters":[{"description":"Password that will be used to encrypt the wallet. All subsequent calls should use this password. If left blank, the seed that gets returned will also be the encryption password.","in":"query","name":"encryptionpassword","required":true,"type":"string"},{"description":"Name of the dictionary that should be used when encoding the seed. 'english' is the most common choice when picking a dictionary.","in":"query","name":"dictionary","type":"string"},{"description":"Dictionary-encoded phrase that corresponds to the seed being used to initialize the wallet.","in":"query","name":"seed","required":true,"type":"string"},{"description":"boolean, when set to true /wallet/init will Reset the wallet if one exists instead of returning an error. This allows API callers to reinitialize a new wallet.","in":"query","name":"force","required":true,"type":"boolean"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/lock":{"post":{"description":"locks the wallet, wiping all secret keys. After being locked, the keys are encrypted. Queries for the seed, to send siafunds, and related queries become unavailable. Queries concerning transaction history and balance are still available.","responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/seed":{"post":{"description":"gives the wallet a seed to track when looking for incoming transactions. The wallet will be able to spend outputs related to addresses created by the seed. The seed is added as an auxiliary seed, and does not replace the primary seed. Only the primary seed will be used for generating new addresses.","parameters":[{"description":"Key used to encrypt the new seed when it is saved to disk.","in":"query","name":"encryptionpassword","required":true,"type":"string"},{"description":"Name of the dictionary that should be used when encoding the seed. 'english' is the most common choice when picking a dictionary.","in":"query","name":"dictionary","type":"string"},{"description":"Dictionary-encoded phrase that corresponds to the seed being added to the wallet.","in":"query","name":"seed","type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/seeds":{"get":{"description":"returns a list of seeds in use by the wallet.  The primary seed is the only seed that gets used to generate new addresses. This call is unavailable when the wallet is locked.\nA seed is an encoded version of a 128 bit random seed. The output is 15 words chosen from a small dictionary as indicated by the input. The most common choice for the dictionary is going to be 'english'. The underlying seed is the same no matter what dictionary is used for the encoding. The encoding also contains a small checksum of the seed,  to help catch simple mistakes when copying. The library entropy-mnemonics is used when encoding.","parameters":[{"description":"Name of the dictionary that should be used when encoding the seed. 'english' is the most common choice when picking a dictionary.","in":"query","name":"dictionary","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"addressesremaining":{"description":"Number of addresses that remain in the primary seed until exhaustion has been reached. Once exhaustion has been reached, new addresses will continue to be generated but they will be more difficult to recover in the event of a lost wallet file or encryption password.","example":2500,"format":"int64","type":"integer"},"allseeds":{"description":"Array of all seeds that the wallet references when scanning the blockchain for outputs. The wallet is able to spend any output generated by any of the seeds, however only the primary seed is being used to generate new addresses.","example":["hello world hello world hello world hello world hello world hello world hello world hello world hello world hello world hello world hello world hello world hello world hello","foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo bar foo"],"items":{"type":"string"},"type":"array"},"primaryseed":{"description":"Seed that is actively being used to generate new addresses for the wallet.","example":"hello world hello world hello world hello world hello world hello world  hello world hello world hello world hello world hello world hello world  hello world hello world hello","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/siacoins":{"post":{"description":"Send siacoins to an address or set of addresses. The outputs are arbitrarily selected from addresses in the wallet. If 'outputs' is supplied, 'amount' and 'destination' must be empty. The number of outputs should not exceed 400; this may result in a transaction too large to fit in the transaction pool.","parameters":[{"description":"Number of hastings being sent. A hasting is the smallest unit in Sia. There are 10^24 hastings in a siacoin.","in":"query","name":"amount","type":"integer"},{"description":"Address that is receiving the coins.","in":"query","name":"destination","type":"string"},{"description":"JSON array of outputs. The structure of each output is: {\"unlockhash\": \"\u003cdestination\u003e\", \"value\": \"\u003camount\u003e\"}","in":"query","name":"outputs","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"transactionids":{"description":"Array of IDs of the transactions that were created when sending the coins. The last transaction contains the output headed to the 'destination'. Transaction IDs are 64 character long hex strings.","example":["1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"],"items":{"type":"string"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/siafunds":{"post":{"description":"sends siafunds to an address.  The outputs are arbitrarily selected from addresses in the wallet. Any siacoins available in the siafunds being sent (as well as the siacoins  available in any siafunds that end up in a refund address) will become  available to the wallet as siacoins after 144 confirmations.  To access all of the siacoins in the siacoin claim balance, send all of  the siafunds to an address in your control (this will give you all the  siacoins, while still letting you control the siafunds).","parameters":[{"description":"Number of siafunds being sent.","in":"query","name":"amount","type":"integer"},{"description":"Address that is receiving the funds.","in":"query","name":"destination","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"transactionids":{"description":"Array of IDs of the transactions that were created when sending the coins. The last transaction contains the output headed to the 'destination'. Transaction IDs are 64 character long hex strings.","example":["1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"],"items":{"type":"string"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/siagkey":{"post":{"description":"Load a key into the wallet that was generated by siag.  Most siafunds are currently in addresses created by siag.","parameters":[{"description":"Key that is used to encrypt the siag key when it is imported to the wallet.","in":"query","name":"encryptionpassword","required":true,"type":"string"},{"description":"List of filepaths that point to the keyfiles that make up the siag key. There should be at least one keyfile per required signature. The filenames need to be commna separated (no spaces), which means filepaths that contain a comma are not allowed.","in":"query","name":"keyfiles","required":true,"type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/sweep/seed":{"post":{"description":"Scan the blockchain for outputs belonging to a seed and send them to an address owned by the wallet.","parameters":[{"description":"Name of the dictionary that should be used when decoding the seed. 'english' is the most common choice when picking a dictionary.","in":"query","name":"dictionary","type":"string"},{"description":"Dictionary-encoded phrase that corresponds to the seed being added to the wallet.","in":"query","name":"seed","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"coins":{"description":"Number of siacoins, in hastings, transferred to the wallet as a result of the sweep.","example":"123456","type":"string"},"funds":{"description":"Number of siafunds transferred to the wallet as a result of the sweep.","example":"1","type":"string"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/transaction/{id}":{"get":{"description":"gets the transaction associated with a specific transaction id.","parameters":[{"description":"ID of the transaction being requested.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"transaction":{"$ref":"#/definitions/Transaction"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/transactions":{"get":{"description":"returns a list of transactions related to the wallet.","parameters":[{"description":"Height of the block where transaction history should begin.","in":"query","name":"startheight","type":"string"},{"description":"Height of of the block where the transaction history should end. If 'endheight' is greater than the current height, all transactions up to and including the most recent block will be provided.","in":"query","name":"endheight","type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"confirmedtransactions":{"description":"All of the confirmed transactions appearing between height 'startheight' and height 'endheight' (inclusive).","items":{"$ref":"#/definitions/Transaction"},"type":"array"},"unconfirmedtransactions":{"description":"All of the unconfirmed transactions.","items":{"$ref":"#/definitions/Transaction"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/transactions/{addr}":{"get":{"description":"returns all of the transactions related to a specific address.","parameters":[{"description":"Unlock hash (i.e. wallet address) whose transactions are being requested.","in":"path","name":"addr","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"transactions":{"description":"Array of processed transactions that relate to the supplied address.","items":{"$ref":"#/definitions/Transaction"},"type":"array"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/unlock":{"post":{"description":"unlocks the wallet. The wallet is capable of knowing whether the correct password was provided.","parameters":[{"description":"Password that gets used to decrypt the file. Most frequently, the encryption password is the same as the primary wallet seed.","in":"query","name":"encryptionpassword","type":"string"}],"responses":{"204":{"description":"Successful Response"},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}},"/wallet/verify/address/{addr}":{"get":{"description":"takes the address specified by addr and returns a JSON response indicating if the address is valid.","parameters":[{"in":"path","name":"addr","required":true,"type":"string"}],"responses":{"200":{"description":"Successful Response","schema":{"properties":{"valid":{"description":"valid indicates if the address supplied to addr is a valid UnlockHash.","example":true,"type":"boolean"}}}},"default":{"description":"Error Response","schema":{"$ref":"#/definitions/StandardError"}}},"tags":["Wallet"]}}},"produces":["application/json"],"schemes":["http"],"security":[{"basicAuth":[]}],"securityDefinitions":{"basicAuth":{"type":"basic"}},"swagger":"2.0","tags":[{"description":"The daemon is responsible for starting and stopping the modules which make up the rest of Sia. It also provides endpoints for viewing build constants.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#daemon"},"name":"Daemon"},{"description":"The consensus set manages everything related to consensus and keeps the blockchain in sync with the rest of the network. The consensus set's API endpoint returns information about the state of the blockchain.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#consensus"},"name":"Consensus"},{"description":"The gateway maintains a peer to peer connection to the network and provides a method for calling RPCs on connected peers. The gateway's API endpoints expose methods for viewing the connected peers, manually connecting to peers, and manually disconnecting from peers. The gateway may connect or disconnect from peers on its own.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#gateway"},"name":"Gateway"},{"description":"The host provides storage from local disks to the network. The host negotiates file contracts with remote renters to earn money for storing other users' files. The host's endpoints expose methods for viewing and modifying host settings, announcing to the network, and managing how files are stored on disk.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#host"},"name":"Host"},{"description":"The hostdb maintains a database of all hosts known to the network. The database identifies hosts by their public key and keeps track of metrics such as price.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#host-db"},"name":"HostDB"},{"description":"The miner provides endpoints for getting headers for work and submitting solved headers to the network. The miner also provides endpoints for controlling a basic CPU mining implementation.\n","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#miner"},"name":"Miner"},{"description":"The renter manages the user's files on the network. The renter's API endpoints expose methods for managing files on the network and managing the renter's allocated funds.","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#renter"},"name":"Renter"},{"description":"The wallet stores and manages siacoins and siafunds. The wallet's API endpoints expose methods for creating and loading wallets, locking and unlocking, sending siacoins and siafunds, and getting the wallet's balance.\nYou must create a wallet before you can use the wallet's API endpoints. You can create a wallet with the /wallet/init endpoint. Wallets are always encrypted on disk. Calls to some wallet API endpoints will fail until the wallet is unlocked. The wallet can be unlocked with the /wallet/unlock endpoint. Once the wallet is unlocked calls to the API endpoints will succeed until the wallet is locked again with /wallet/lock, or Siad is restarted.  The host and renter require the miner to be unlocked.","externalDocs":{"description":"GitHub","url":"https://sia.tech/docs/#wallet"},"name":"Wallet"}]}
